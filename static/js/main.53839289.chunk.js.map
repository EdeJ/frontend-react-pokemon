{"version":3,"sources":["components/Pokemon.js","components/NavButtons.js","assets/pokemon-logo.png","App.js","reportWebVitals.js","index.js"],"names":["Pokemon","name","useState","pokemonDetails","setPokemonDetails","useEffect","a","Axios","get","result","console","log","data","error","fetchData","class","className","src","sprites","front_default","alt","FlashOn","moves","length","FitnessCenter","weight","Equalizer","abilities","map","ability","NavButtons","previousUrl","nextUrl","setUrl","type","disabled","onClick","ChevronLeft","ChevronRight","App","pokimons","setPokimons","setPreviousUrl","setNextUrl","url","previous","next","fetchPokimonList","logo","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAKaA,G,MAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAEWC,mBAAS,MAFpB,mBAE1BC,EAF0B,KAEVC,EAFU,KAiBjC,OAbAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,+EAE6BC,IAAMC,IAAN,4CAA+CP,IAF5E,OAEcQ,EAFd,OAGQC,QAAQC,IAAIF,EAAOG,MACnBR,EAAkBK,EAAOG,MAJjC,gDAMQF,QAAQG,MAAR,MANR,0DADY,uBAAC,WAAD,wBAUZC,KACD,CAACb,IAGA,qBAAKc,MAAM,eAAX,SACKZ,EACG,+BACI,6BAAI,6BAAKA,EAAeF,SACxB,oBAAIe,UAAU,QAAd,SAAsB,qBAClBC,IAAKd,EAAee,QAAQC,cAC5BC,IAAG,qBAAgBjB,EAAeF,UAEtC,+BAAI,cAACoB,EAAA,EAAD,IAAW,wCAAf,IAAgClB,EAAemB,MAAMC,UACrD,+BAAI,cAACC,EAAA,EAAD,IAAJ,IAAsB,yCAAtB,IAAwCrB,EAAesB,UACvD,+BAAI,cAACC,EAAA,EAAD,IAAa,4CACb,6BACKvB,EAAewB,UAAUC,KAAI,gBAAGC,EAAH,EAAGA,QAAH,OAC1B,6BAAKA,EAAQ5B,kBAOzB,kD,wBCvCP6B,G,MAAa,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC/C,OACI,sBAAKjB,UAAU,cAAf,UACI,wBAAQkB,KAAK,SAASlB,UAAU,WAC5BmB,UAAWJ,IAAe,EAC1BK,QAAS,WACDL,GACAE,EAAOF,IAJnB,SAOI,iCAAM,cAACM,EAAA,EAAD,IAAN,cAEJ,wBAAQH,KAAK,SAASlB,UAAU,OAC5BmB,UAAWH,IAAW,EACtBI,QAAS,WACDJ,GACAC,EAAOD,IAJnB,SAOC,4CAAc,cAACM,EAAA,EAAD,cCvBZ,MAA0B,yCCiD1BC,MA1Cf,WAAgB,IAAD,EAEmBrC,mBAAS,MAF5B,mBAENsC,EAFM,KAEIC,EAFJ,OAGyBvC,mBAAS,MAHlC,mBAGN6B,EAHM,KAGOW,EAHP,OAIiBxC,mBAAS,MAJ1B,mBAIN8B,EAJM,KAIGW,EAJH,OAKSzC,mBAAS,uDALlB,mBAKN0C,EALM,KAKDX,EALC,KAyBb,OAlBA5B,qBAAU,WAAM,4CAGd,4BAAAC,EAAA,+EAEyBC,IAAMC,IAAIoC,GAFnC,OAEUnC,EAFV,OAGIiC,EAAejC,EAAOG,KAAKiC,UAC3BF,EAAWlC,EAAOG,KAAKkC,MACvBL,EAAYhC,EAAOG,MALvB,gDAQIF,QAAQG,MAAR,MARJ,0DAHc,0DAcdkC,KACC,CAACH,IAIF,qCACE,iCAAQ,qBAAKxB,IAAI,eAAeH,IAAK+B,MACrC,cAAC,EAAD,CAAYjB,YAAaA,EAAaC,QAASA,EAASC,OAAQA,IAChE,oBAAIlB,MAAM,eAAV,SACGyB,EAAWA,EAASS,QAAQrB,KAAI,gBAAG3B,EAAH,EAAGA,KAAH,OAC/B,6BACE,cAAC,EAAD,CAASA,KAAMA,KADRA,MAIP,kDC9BGiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.53839289.chunk.js","sourcesContent":["import { Equalizer, FitnessCenter, FlashOn } from '@material-ui/icons';\r\nimport Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Pokemon.css';\r\n\r\nexport const Pokemon = ({ name }) => {\r\n\r\n    const [pokemonDetails, setPokemonDetails] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const result = await Axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n                console.log(result.data);\r\n                setPokemonDetails(result.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [name]);\r\n\r\n    return (\r\n        <div class=\"pokemon-card\">\r\n            {pokemonDetails ? (\r\n                <ul>\r\n                    <li><h3>{pokemonDetails.name}</h3></li>\r\n                    <li className=\"image\"><img\r\n                        src={pokemonDetails.sprites.front_default}\r\n                        alt={`Afbeelding ${pokemonDetails.name}`}\r\n                    /></li>\r\n                    <li><FlashOn /><h4>Moves:</h4> {pokemonDetails.moves.length}</li>\r\n                    <li><FitnessCenter /> <h4>Weight:</h4> {pokemonDetails.weight}</li>\r\n                    <li><Equalizer /><h4>Abilities:</h4>\r\n                        <ul>\r\n                            {pokemonDetails.abilities.map(({ ability }) => (\r\n                                <li>{ability.name}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </li>\r\n\r\n                </ul>\r\n            ) : (\r\n                    <span>loading...</span>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { ChevronLeft, ChevronRight } from '@material-ui/icons';\r\nimport './NavButtons.css';\r\n\r\nexport const NavButtons = ({ previousUrl, nextUrl, setUrl }) => {\r\n    return (\r\n        <div className=\"nav-buttons\">\r\n            <button type=\"button\" className=\"previous\"\r\n                disabled={!previousUrl && true}\r\n                onClick={() => {\r\n                    if (previousUrl) {\r\n                        setUrl(previousUrl);\r\n                    }\r\n                }}>\r\n                <span><ChevronLeft />Vorige</span>\r\n            </button>\r\n            <button type=\"button\" className=\"next\"\r\n                disabled={!nextUrl && true}\r\n                onClick={() => {\r\n                    if (nextUrl) {\r\n                        setUrl(nextUrl);\r\n                    }\r\n                }}\r\n            ><span>Volgende<ChevronRight /></span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pokemon-logo.03c029a4.png\";","import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { Pokemon } from './components/Pokemon';\r\nimport './App.css';\r\nimport { NavButtons } from './components/NavButtons';\r\nimport logo from './assets/pokemon-logo.png';\r\n\r\nfunction App() {\r\n\r\n  const [pokimons, setPokimons] = useState(null);\r\n  const [previousUrl, setPreviousUrl] = useState(null);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon?limit=20&offset=0');\r\n\r\n  useEffect(() => {\r\n    // setPokimons(null);\r\n\r\n    async function fetchPokimonList() {\r\n      try {\r\n        const result = await Axios.get(url);\r\n        setPreviousUrl(result.data.previous);\r\n        setNextUrl(result.data.next);\r\n        setPokimons(result.data);\r\n        // console.log(result.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchPokimonList();\r\n  }, [url]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <header><img alt=\"pokemon-logo\" src={logo} /></header>\r\n      <NavButtons previousUrl={previousUrl} nextUrl={nextUrl} setUrl={setUrl} />\r\n      <ul class=\"pokemon-list\">\r\n        {pokimons ? pokimons.results.map(({ name }) => (\r\n          <li key={name}>\r\n            <Pokemon name={name} />\r\n          </li>\r\n        )) : (\r\n            <h1>loading...</h1>\r\n          )}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}